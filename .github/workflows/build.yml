name: BuildExe
on:
  push:
    branches:
      - main
    tags:
      - "*"
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-latest
          - os: windows-latest
          - os: ubuntu-20.04
          - os: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - uses: actions/setup-python@v4
        with:
          python-version: "3.10.7"

      - name: Install Poetry Action
        uses: snok/install-poetry@v1.3.1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}-2

      - name: Load cached Whisper models
        id: cached-whisper-models
        uses: actions/cache@v3
        with:
          path: |
            ~/Library/Caches/Buzz
            ~/.cache/whisper
            ~/.cache/huggingface
            ~/AppData/Local/Buzz/Buzz/Cache
          key: whisper-models-${{ runner.os }}

      - uses: FedericoCarboni/setup-ffmpeg@v1
        id: setup-ffmpeg
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install dependencies
        run: poetry install

      - name: Install apt dependencies
        run: |
          sudo apt-get update
          sudo apt-get install --no-install-recommends libyaml-dev libegl1-mesa libxkbcommon-x11-0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-xinerama0 libxcb-shape0 libxcb-cursor0 libportaudio2 gettext libpulse0
        if: "startsWith(matrix.os, 'ubuntu-')"

      - name: Test
        run: |
          poetry run make test
        shell: bash

      - name: Upload coverage reports to Codecov with GitHub Action
        uses: codecov/codecov-action@v3
        with:
          flags: ${{ runner.os }}
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
    steps:
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10.7"
      - name: Install Poetry Action
        uses: snok/install-poetry@v1.3.1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}-2

      - uses: FedericoCarboni/setup-ffmpeg@v1
        id: setup-ffmpeg
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Install dependencies
        run: |
          poetry config virtualenvs.in-project true
          poetry install
        shell: bash

      - name: Bundle
        run: poetry run make bundle_windows
        shell: bash
      - uses: actions/upload-artifact@v3
        with:
          name: Buzz-${{ runner.os }}
          path: |
            dist/Buzz*-windows.exe
      